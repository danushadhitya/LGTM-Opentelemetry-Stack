mimir-distributed: 
  global:
    extraEnvFrom:
     - secretRef:
        name: aws-cred
  serviceAccount:
    create: true
    name: mimir  
  enterprise:
    enabled: false       
  minio:
    enabled: false
  mimir:
    structuredConfig:
      common:
        storage:
          backend: s3
          s3:
            endpoint: s3.us-east-2.amazonaws.com
            region: us-east-2
            secret_access_key: "${SECRET_KEY}" 
            access_key_id: "${ACCESS_KEY}" 
      blocks_storage:
        backend: s3
        s3:
          bucket_name: mimir-blocks-k8s
        bucket_store:
          sync_dir: "data"  

      alertmanager_storage:
        s3:
          bucket_name: mimir-alertmanager-k8s

      ruler_storage:
        s3:
          bucket_name: mimir-ruler-k8s
  alertmanager:
    enabled: false
  ingestor:
    replicas: 1
    zoneAwareReplication:
      enabled: false
    statefulSet:
      enabled: true
    persisentVolume:
      enabled: true  
  ruler_querier:
    replicas: 1
  querier:
    replicas: 1
  query_scheduler:
    replicas: 1
  store_gateway:
    zoneAwareReplication:
      enabled: false  
    statefulSet:
      enabled: true
    persisentVolume:
      enabled: true    
  nginx:
    basicAuth: 
      enabled: true
      username: hello
      password: hello
  gateway:
    enabled: false   
  ruler:
    extraVolumes:
      - name: recording-rules
        configMap:
          name: mimir-recording-rules

    extraVolumeMounts:
      - name: recording-rules
        mountPath: /temp/rules/tenant-1
        readOnly: true    


grafana:
  namespaceOverride: "grafana"
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: mimir
          type: prometheus
          url: http://grafana-mimir-nginx.grafana.svc.cluster.local/prometheus
          isDefault: true
          editable: true
          basicAuth: true
          basicAuthUser: hello
          secureJsonData:
            httpHeaderValue1: 'tenant-1'
            basicAuthPassword: hello
          jsonData:
            httpHeaderName1: 'X-Scope-OrgID'  

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: 'Mixins Folder'
          type: file
          disableDeletion: true
          # <int> how often Grafana will scan for changed dashboards
          updateIntervalSeconds: 10
          allowUiUpdates: true
          options:
            path: /var/lib/grafana/dashboards

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      folder: /var/lib/grafana/dashboards